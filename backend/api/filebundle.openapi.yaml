openapi: 3.0.0
servers:
  - description: Docker test server
    url: 'http://localhost:8080/'
info:
  description: File Bundle API
  version: 1.0.0
  title: File Bundle API
  contact:
    email: daniel@tweedegolf.nl
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
paths:
  /admin/file/list:
    get:
      operationId: openRootFolder
      description: Returns files and folder in of the root folder
      responses:
        '200':
          $ref: '#/components/responses/list'
  '/admin/file/list/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: the id of the folder whose contents we want to retreive
        schema:
          type: string
    get:
      operationId: openFolder
      description: Returns files and folder in the folder whose id is in the path
      responses:
        '200':
          $ref: '#/components/responses/list'
  /admin/file/upload:
    post:
      operationId: uploadToRootFolder
      description: Upload files to the root folder
      requestBody: null
      responses:
        '200':
          $ref: '#/components/responses/upload'
  '/admin/file/upload/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: the id of the folder that will hold the the uploaded file(s)
        schema:
          type: string
    post:
      operationId: uploadToFolder
      description: Upload files to specified folder
      responses:
        '200':
          $ref: '#/components/responses/upload'
  '/admin/file/move/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: the id of the folder to move the files to
        schema:
          type: string
      - in: formData
        name: fileIds
        description: file name to upload
        required: false
        schema:
          type: array
          items:
            type: string
    post:
      operationId: moveItems
      description: moves items (files and/or folders) to the folder whose is in the path
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileIds:
                  type: array
                  items:
                    type: string
                folderIds:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: >-
            the ids of the items that raised errors while moving will be
            returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  file_errors:
                    type: array
                    items:
                      type: string
                  folder_errors:
                    type: array
                    items:
                      type: string
  '/admin/file/delete/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: the id of the file to be deleted
        schema:
          type: string
    post:
      operationId: deleteFile
      description: deletes the file with the specified id
      responses:
        '200':
          description: >-
            boolean indicating whether the file has been deleted successfully or
            not
          content:
            application/json:
              schema:
                type: boolean
  '/admin/file/delete/folder/{id}':
    parameters:
      - name: id
        in: path
        required: true
        description: the id of the folder to be deleted
        schema:
          type: string
    post:
      operationId: deleteFolder
      description: deletes the folder with the specified id
      responses:
        '200':
          description: >-
            boolean indicating whether the folder has been deleted successfully
            or not
          content:
            application/json:
              schema:
                type: boolean
components:
  schemas:
    file:
      properties:
        id:
          type: string
        name:
          type: string
        create_ts:
          type: number
        created:
          type: string
        type:
          type: string
        size:
          type: string
        size_bytes:
          type: number
        original:
          type: string
        thumb:
          type: string
          nullable: true
        is_new:
          type: boolean
        is_trashed:
          type: boolean
      required:
        - id
        - name
    folder:
      properties:
        id:
          type: string
        name:
          type: string
        parent:
          oneOf:
            - type: string
            - nullable: true
        create_ts:
          type: integer
        created:
          type: string
        file_count:
          type: integer
        folder_count:
          type: integer
        type:
          type: string
        size:
          type: string
        size_bytes:
          type: integer
        is_trashed:
          type: boolean
      required:
        - id
        - name
        - parent
  responses:
    list:
      description: A list of files and folders.
      content:
        application/json:
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  $ref: '#/components/schemas/file'
              folders:
                type: array
                items:
                  $ref: '#/components/schemas/folder'
    upload:
      description: Successfully uploaded files
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: object
                additionalProperties:
                  type: string
                  items:
                    type: string
              uploads:
                type: array
                items:
                  $ref: '#/components/schemas/file'
